package br.gov.ms.corumba.services;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import br.gov.ms.corumba.entities.Servico;
import br.gov.ms.corumba.repositories.ServicoRepository;
import br.gov.ms.corumba.resources.dto.servico.ServicoDTO;
import br.gov.ms.corumba.services.exceptions.ResourceNotFoundException;

@Service
public class ServicoService {

	@Autowired
	private ServicoRepository repository;
	
	@Transactional(readOnly = true)
	public Servico findOneEntity(Long id) {
		return repository.findById(id).orElseThrow(()-> new ResourceNotFoundException("Servico n√£o encontrado, id: "+id));
		
	}

	@Transactional(readOnly = true)
	public  Page<ServicoDTO> findAllPaged(Pageable paged) {
		Page<Servico> produtos = repository.findAll(paged);
	   return produtos.map(x -> new ServicoDTO(x));
	}
	
	@Transactional(readOnly = true)
	public  List<ServicoDTO> findAll() {
		List<Servico> produtos = repository.findAll();
	   return produtos.stream()
			   .map(x -> new ServicoDTO(x)).collect(Collectors.toList());
	}
}
